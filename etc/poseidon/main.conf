// Copyright (C) 2024 by LH_Mouse <lh_mouse@126.com>
//
// Permission to use, copy, modify, and/or distribute this
// software for any purpose with or without fee is hereby granted.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
// WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
// THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR
// CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
// LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
// NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
// CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

general
{
  // pid_file_path:
  //   [path]  ::= write PID to this file after startup
  //   null    ::= don't write PID anywhere
  pid_file_path = "../../var/poseidon/poseidon.pid"

  // default_compression_level:
  //   0     ::= disable compression
  //   1-9   ::= specify level of compression
  //   null  ::= use zlib default value
  default_compression_level = 8
}

logger
{
  fatal
  {
    color = "95"  // bright magenta
    stderr = true  // copy to standard error
    file = "../../var/poseidon/server.err"
  }

  error
  {
    color = "91"  // bright red
    stderr = true  // copy to standard error
    file = "../../var/poseidon/server.err"
  }

  warn
  {
    color = "33"  // yellow
    stdout = true  // copy to standard output
    file = "../../var/poseidon/server.log"
  }

  info
  {
    color = "32"  // green
    stdout = true  // copy to standard output
    file = "../../var/poseidon/server.log"
  }

  debug
  {
    color = "36"  // cyan
    trivial = false  // may be discarded if too much
    stdout = true  // copy to standard output
    file = "../../var/poseidon/server.log"
  }

  trace
  {
    color = "94"  // bright blue
    trivial = true  // may be discarded if too much
    stdout = true  // copy to standard output
  }
}

network
{
  poll
  {
    // event_buffer_size:
    //   [count]  ::= number of I/O events for each single poll
    //   null     ::= default value: 1 KiB
    event_buffer_size = 1024

    // throttle_size:
    //   [bytes]  ::= suspend reading if write queue exceeds this size
    //   null     ::= default value: 1 MiB
    throttle_size = 1048576
  }

  ssl
  {
    // default_certificate:
    //   [path]  ::= default certificate file for servers
    //   null    ::= no default certificate
    default_certificate = "ssl/test.crt"

    // default_private_key:
    //   [path]  ::= default private key file for servers
    //   null    ::= no default private key
    default_private_key = "ssl/test.key"

    // trusted_ca_path:
    //   [path]  ::= directory of trusted CA certificates for clients
    //   null    ::= no validation (DANGEROUS for production use)
    trusted_ca_path = "/etc/ssl/certs"
  }

  http
  {
    // max_request_content_length:
    //   [bytes]  ::= maximum number of bytes that the body of a request
    //                message from a client is allowed to contain (used by
    //                the default implementation of `HTTP_Server_Session::
    //                do_on_http_request_payload_stream()`)
    //   null     ::= default value: 3 MiB
    max_request_content_length = 3145728

    // max_response_content_length:
    //   [bytes]  ::= maximum number of bytes that the body of a response
    //                message from another server may contain (used by the
    //                default implementation of `HTTP_Client_Session::
    //                do_on_http_response_payload_stream()`)
    //   null     ::= default value: 1 MiB
    max_response_content_length = 1048576

    // keep_alive_timeout:
    //   [secs]   ::= shut persistent connections down after this timeout
    //   null     ::= default value: 30
    keep_alive_timeout = 30

    // max_websocket_message_length:
    //   [bytes]  ::= maximum number of bytes that the total (unfragmented)
    //                length of an incoming WebSocket message is allowed to
    //                contain (used by the default implementations of
    //                `WS_Server_Session::do_on_ws_stream()` and
    //                `WS_Client_Session::do_on_ws_stream()`)
    //   null     ::= default value: 1 MiB
    max_websocket_message_length = 1048576
  }
}

fiber
{
  // stack_vm_size:
  //   [bytes]  ::= stack size for each fiber, including 2 guard pages (must
  //                be a multiple of 65536)
  //   null     ::= use system thread stack size
  stack_vm_size = null

  // warn_timeout:
  //   [secs]   ::= print a warning if suspension exceeds this duration
  //   null     ::= default value: 15 seconds
  warn_timeout = 15

  // fail_timeout
  //   [secs]   ::= resume execution if suspension exceeds this duration
  //   null     ::= default value: 300 seconds
  fail_timeout = 300
}

mysql
{
  // default_server:
  //   [hostname]  ::= name of MySQL server to connect
  //   null or ""  ::= default value: "localhost"
  default_server = "localhost"

  // default_port:
  //   0-65534     ::= port to connect
  //   null        ::= default value: 3306
  default_port = 3306

  // default_database:
  //   [db]        ::= name of default database
  //   null or ""  ::= no default database
  default_database = "testdb"

  // default_user:
  //   [user]      ::= name of user to authenticate
  //   null or ""  ::= use current user
  default_user = "root"

  // default_password:
  //   [passwd]    ::= password to authenticate
  //   null or ""  ::= use empty password
  default_password = "123456"

  // connection_pool_size:
  //   [1-100]     ::= max number of idle connections to keep
  //   null or 0   ::= close idle connections as soon as possible
  connection_pool_size = 2

  // connection_idle_timeout:
  //   [secs]      ::= close connections that have been idle for this time
  //   null        ::= default value: 60 seconds
  connection_idle_timeout = 60
}

mongo
{
  // default_server:
  //   [hostname]  ::= name of MongoDB server to connect
  //   null or ""  ::= default value: "localhost"
  default_server = "localhost"

  // default_port:
  //   0-65534     ::= port to connect
  //   null        ::= default value: 27017
  default_port = 27017

  // default_database:
  //   [db]        ::= name of default database
  //   null or ""  ::= no default database
  default_database = "testdb"

  // default_user:
  //   [user]      ::= name of user to authenticate
  //   null or ""  ::= use current user
  default_user = "root"

  // default_password:
  //   [passwd]    ::= password to authenticate
  //   null or ""  ::= use empty password
  default_password = "123456"

  // connection_pool_size:
  //   [1-100]     ::= max number of idle connections to keep
  //   null or 0   ::= close idle connections as soon as possible
  connection_pool_size = 2

  // connection_idle_timeout:
  //   [secs]      ::= close connections that have been idle for this time
  //   null        ::= default value: 60 seconds
  connection_idle_timeout = 60
}

redis
{
  // default_server:
  //   [hostname]  ::= name of Redis server to connect
  //   null or ""  ::= default value: "localhost"
  default_server = "localhost"

  // default_port:
  //   0-65534     ::= port to connect
  //   null        ::= default value: 6379
  default_port = 6379

  // default_user:
  //   [user]      ::= name of user to authenticate
  //   null or ""  ::= authenticate without a user name
  default_user = ""

  // default_password:
  //   [passwd]    ::= password to authenticate
  //   null or ""  ::= use empty password
  default_password = "123456"

  // connection_pool_size:
  //   [1-100]     ::= max number of idle connections to keep
  //   null or 0   ::= close idle connections as soon as possible
  connection_pool_size = 2

  // connection_idle_timeout:
  //   [secs]      ::= close connections that have been idle for this time
  //   null        ::= default value: 60 seconds
  connection_idle_timeout = 60
}

// This is the list of shared libraries to load. Addons are loaded in this
// precise order. If a string is not a path, but a file name, conventional
// library search rules apply. Addons cannot be  unloaded.
addons
[
//  "libposeidon-example_udp_echo_server.so"
//  "libposeidon-example_tcp_echo_server.so"
//  "libposeidon-example_ssl_echo_server.so"
//  "libposeidon-example_http_server.so"
//  "libposeidon-example_http_client.so"
//  "libposeidon-example_https_server.so"
//  "libposeidon-example_https_client.so"
  "libposeidon-example_ws_server.so"
//  "libposeidon-example_ws_client.so"
//  "libposeidon-example_wss_server.so"
//  "libposeidon-example_wss_client.so"
]
